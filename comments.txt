Random rng = new Random(); // Ideally just create one instance globally
// Note: use LinkedHashSet to maintain insertion order
Set<Integer> generated = new LinkedHashSet<Integer>();
while (generated.size() < numbersNeeded)
{
    Integer next = rng.nextInt(max) + 1;
    // As we're adding to a set, this will automatically do a containment check
    generated.add(next);
}



/**** Fisherâ€“Yates shuffle *****/


/**** SPECIFIC RANGE *****/

random.nextInt(max - min + 1) + min


Comparable[] generatedArray = randomGeneration
                .generateArrayFromRange(5, 5, 10);

Comparable[] validItems = new Comparable[]{9, 8, 7, 6, 5};

assertThat(generatedArray, Matchers.arrayContaining(validItems));


    public InvocationException(String targetClassName,
                               Throwable cause) {
        super("There has been an error during an invocation of the " +
                "the filler method of class " + targetClassName +
                ". Please, check if a filler method you are trying to invoke has " +
                "not been declared private. This error may also occur if there has " +
                "been an error during an actual work of the given method. ", cause);
    }